% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{get_analysis_fns}
\alias{get_analysis_fns}
\title{Get filenames of Met Nordic netcdfs}
\usage{
get_analysis_fns(time_start, time_end = NULL, use_rerun = TRUE)
}
\arguments{
\item{time_start, time_end}{the time stamps you want to extract data for. If \code{time_end} is provided, an hourly sequence from (the lowest entry of) \code{time_start} to \code{time_end} is considered. Alternatively,
a vector of hourly time stamps can be provided as \code{time_start} (if \code{time_end == NULL}). If a vector of dates is provided, all hourly time stamps contained in these dates are used (using UTC timezone, see \code{\link{date_hours}})}

\item{use_rerun}{logical. Decides whether the operational archive or the rerun archive should be preferred (for timestamps for which both is available),
see the \href{https://github.com/metno/NWPdocs/wiki/MET-Nordic-dataset}{met Nordic data documentation} for details.
If \code{TRUE} (the default), the rerun archive is used (which uses one consistent analysis), else the operational archive is used.}
}
\description{
Given a time-range or a vector of times, this function returns a vector of all met Nordic filenames/paths corresponding to those times.
Times are converted to POSIXct using \code{\link{as.GMT}}. In particular, character strings such as \code{"2024-01-01 00:00:00"} are interpreted to be in GMT(=UTC), which is the timezone used by met Nordic.
This differs from \code{as.POSIXct} which by default uses the timezone of the machine it is running on.
}
\examples{
# time range:
fns1 = get_analysis_fns(time_start = "2023-09-01 01:23:45", time_end =  "2023-09-30")

# selected times:
times = c(as.GMT('2024-01-03 01:23:45'), as.GMT('2024-02-03 00:12:34'))
fns2 = get_analysis_fns(time_start = times)

# selected dates:

dates = seq(as.Date('2024-01-01'), Sys.Date(), by = 1)
fns = get_analysis_fns(time_start = dates) # ALL time stamps for these dates are loaded
                                          # (not only the midnight time stamps,
                                          # which would be the case if the dates
                                          # are simply converted to times).

}
